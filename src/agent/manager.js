import { initializeAgentExecutorWithOptions } from "langchain/agents";
import { ChatOpenAI } from "langchain/chat_models/openai";
import { precioTool, estadoTool } from "./tools/index.js";
import { ConsoleCallbackHandler } from "langchain/callbacks";

export async function initializeAgent() {
  const tools = [precioTool, estadoTool];
  
  const model = new ChatOpenAI({ 
    model: "gpt-3.5-turbo",
    temperature: 0,
    maxRetries: 2, // ğŸ‘ˆ Nuevo: reintentos para errores de API
    maxConcurrency: 1, // ğŸ‘ˆ Evita sobrecarga
    configuration: {
      baseOptions: {
        headers: {
          "Accept-Language": "es-ES"
        }
      }
    }
  });

  const executor = await initializeAgentExecutorWithOptions(tools, model, {
    agentType: "structured-chat-zero-shot-react-description",
    verbose: process.env.NODE_ENV === 'development',
    maxIterations: 10, // ğŸ‘ˆ Mantenemos un valor razonable
    returnIntermediateSteps: false,
    handleParsingErrors: (error) => { // ğŸ‘ˆ Manejo personalizado
      console.error("Error de parsing:", error);
      return "Por favor reformula tu pregunta de manera mÃ¡s clara.";
    },
    earlyStoppingMethod: "generate", // ğŸ‘ˆ Mejor control de parada
    agentArgs: {
      prefix: `Eres el asistente de LavadÃ­simo. Reglas estrictas:
1. Usa EXCLUSIVAMENTE las herramientas proporcionadas
2. Si no encuentras informaciÃ³n, di "No tengo ese dato. Â¿Deseas consultar otro servicio?"
3. Nunca inventes precios
4. Respuestas breves (mÃ¡ximo 2 lÃ­neas)
5. Moneda CLP (ej: $15.000)`,
      suffix: `Â¡Importante! Si la herramienta no devuelve resultados:
- Pide confirmaciÃ³n o mÃ¡s detalles
- Nunca inventes respuestas
- Usa exactamente una de estas opciones:
  â€¢ "No tengo ese dato registrado"
  â€¢ "Â¿Te refieres a [producto similar]?"
  â€¢ "Por favor describe mejor el servicio"`
    }
  });

  return executor;
}
